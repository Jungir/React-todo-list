{"version":3,"sources":["Todo.js","NewTodoForm.js","TodoList.js","App.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isEditing","task","completed","toggleForm","bind","assertThisInitialized","handleRemove","handleChange","handleUpdate","handleToggle","removeTodo","id","setState","evt","preventDefault","updateTodo","defineProperty","target","name","value","toggleTodo","react_default","a","createElement","className","onSubmit","type","onChange","onClick","class","Component","NewTodoForm","handeSubmit","createTodo","objectSpread","uuid","htmlFor","placeholder","TodoList","todos","create","remove","update","toggleCompletion","filter","t","newTodo","concat","toConsumableArray","updatedTask","updatedTodo","map","todo","_this2","src_Todo_0","key","src_NewTodoForm_0","App","src_TodoList_0","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b0314d72.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Todo.css'\r\nclass Todo extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isEditing: false,\r\n            task: this.props.task,\r\n            completed: false,\r\n        }\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.handleChange =this.handleChange.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleToggle =this.handleToggle.bind(this);\r\n    }\r\n    handleRemove(){\r\n        this.props.removeTodo(this.props.id);\r\n    }\r\n\r\n    toggleForm(){\r\n        this.setState({\r\n            isEditing : !this.state.isEditing\r\n        });\r\n    }\r\n    handleUpdate(evt){\r\n        evt.preventDefault();\r\n        //take new task and pass up to parent\r\n        this.props.updateTodo (this.props.id, this.state.task);\r\n        this.setState({isEditing : false});\r\n\r\n    }\r\n    handleChange(evt){\r\n        this.setState ({\r\n            [evt.target.name] : evt.target.value\r\n        })\r\n    }\r\n    handleToggle(){\r\n        this.props.toggleTodo(this.props.id);\r\n    }\r\n    render() {\r\n        let result;\r\n        if (this.state.isEditing) {\r\n          result = (\r\n            <div>\r\n                 <form className='Todo-edit-form' onSubmit={this.handleUpdate}>\r\n                <input\r\n                  type='text'\r\n                  value={this.state.task}\r\n                  name='task'\r\n                  onChange={this.handleChange}\r\n                />\r\n                <button>Save</button>\r\n              </form>\r\n            </div>\r\n          );\r\n        }else{\r\n            result = (\r\n            <div className=\"Todo\">\r\n\r\n            <li className={this.props.completed ? \"Todo-task completed\" : \"Todo-task\"} onClick={this.handleToggle}>\r\n            {this.props.task}\r\n                </li>\r\n                <div>\r\n                    <button onClick={this.toggleForm}>\r\n                        <i class='fas fa-pen' />\r\n                    </button>\r\n                    <button onClick={this.handleRemove}>\r\n                        <i class='fas fa-trash' />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\nexport default Todo;","import React, {Component} from 'react';\r\nimport uuid from 'uuid/v4';\r\nimport './NewTodoForm.css'\r\nclass NewTodoForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            task: '',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handeSubmit = this.handeSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(evt){\r\n        this.setState ({\r\n            [evt.target.name] : evt.target.value\r\n        })\r\n    }\r\n    handeSubmit(evt){\r\n        evt.preventDefault();\r\n        this.props.createTodo({...this.state, id: uuid(), completed: false});\r\n        this.setState({task: ''})\r\n    }\r\n    render(){\r\n        return (\r\n            <form className=\"NewTodoForm\" onSubmit={this.handeSubmit}>\r\n                <label htmlFor=\"task\">Add new Todo</label>\r\n                <input id=\"task\" name=\"task\" onChange={this.handleChange} value={this.state.task}   placeholder=\"New Todo\" type=\"text\"/>\r\n                <button>Add</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default NewTodoForm;","import React, {Component} from 'react';\r\nimport Todo from './Todo';\r\nimport NewTodoForm from './NewTodoForm';\r\nimport './TodoList.css'\r\nclass TodoList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {todos: [\r\n           \r\n        ]}\r\n        this.create = this.create.bind(this);\r\n        this.remove = this.remove.bind(this);\r\n        this.update = this.update.bind(this);\r\n        this.toggleCompletion = this.toggleCompletion.bind(this);\r\n    }\r\n    remove(id){\r\n        this.setState({\r\n            todos: this.state.todos.filter(t => {\r\n                return t.id !== id;\r\n            })\r\n        })\r\n    }\r\n\r\n    create(newTodo){\r\n        this.setState({\r\n            todos: [...this.state.todos, newTodo],\r\n        })\r\n    }\r\n    update(id, updatedTask){\r\n        const updatedTodo = this.state.todos.map(todo => {\r\n            if (todo.id === id){\r\n                //unpucks the cueerent todo and overrides the task\r\n                return {...todo, task: updatedTask}\r\n            }\r\n            return todo;\r\n        });\r\n        this.setState({todos: updatedTodo});\r\n    }\r\n    toggleCompletion(id){\r\n        const updatedTodo = this.state.todos.map(todo => {\r\n            if (todo.id === id){\r\n                //unpucks the todo and overrides the todoCompletion\r\n                return {...todo, completed: !todo.completed}\r\n            }\r\n            return todo;\r\n        });\r\n        this.setState({todos: updatedTodo});\r\n    }\r\n\r\n    render(){\r\n\r\n        const todos = this.state.todos.map(todo => {\r\n            return <Todo \r\n                updateTodo = {this.update} \r\n                id={todo.id} \r\n                removeTodo={this.remove} \r\n                key={todo.id} \r\n                task={todo.task} \r\n                completed={todo.completed} \r\n                toggleTodo={this.toggleCompletion}/>\r\n        });        \r\n        return(\r\n            <div className=\"TodoList\">\r\n                <h1>Let's plan the day!</h1>\r\n                <ul>\r\n                    {todos}\r\n                </ul>\r\n                <NewTodoForm createTodo = {this.create}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React, {Component} from 'react';\nimport TodoList from './TodoList';\nimport './App.css';\nclass App extends Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <TodoList/>\n\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}